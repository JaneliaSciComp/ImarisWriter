name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Checkout zlib repository
      uses: actions/checkout@v2
      with:
        repository: madler/zlib
        path: zlib
        ref: v1.2.11
        
    - name: Checkout LZ4 repository
      uses: actions/checkout@v2
      with:
        repository: lz4/lz4
        path: lz4
      
    - name: Checkout HDF5 repository
      uses: actions/checkout@v2
      with:
        repository: HDFGroup/hdf5
        path: hdf5
        ref: hdf5-1_12_0

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        cmake -E make_directory ${{runner.workspace}}/build
        cmake -E make_directory ${{runner.workspace}}/zlib/build
        cmake -E make_directory ${{runner.workspace}}/hdf5/build
        cmake -E make_directory ${{runner.workspace}}/lz4/build
           
    - name: Build zlib
      shell: bash
      working-directory: ${{runner.workspace}}/zlib/build
      run: |
        cmake $GITHUB_WORKSPACE/zlib -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build . --config $BUILD_TYPE --target install
        
    - name: Build LZ4
      shell: bash
      working-directory: $GITHUB_WORKSPACE/lz4
      run: |
        make
        make install
        
    - name: Build HDF5
      shell: bash
      working-directory: ${{runner.workspace}}/hdf5/build
      run: |
        cmake $GITHUB_WORKSPACE/hdf5 -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build . --config $BUILD_TYPE --target install

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
